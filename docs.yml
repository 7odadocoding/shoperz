openapi: 3.0.0
info:
  title: SHOPERZ API Documentation
  version: '1.0'
security:
  - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  /auth/signup:
    post:
      summary: User Signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
                phone:
                  type: string
      responses:
        '200':
          description: Signup successful
        '400':
          description: Invalid request data
  /auth/login:
    post:
      summary: User Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
        '400':
          description: Invalid request data
  /auth/verify-email:
    get:
      summary: Verify Email
      parameters:
        - in: query
          name: token
          required: true
          schema:
            type: string
        - in: query
          name: uid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Email verification successful
        '400':
          description: Invalid request data
  /users/change-password:
    post:
      summary: Change Password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPassword:
                  type: string
                  minLength: 8
                newPassword:
                  type: string
                  minLength: 8
                newPasswordRepeat:
                  type: string
      responses:
        '200':
          description: Password changed successfully
        '400':
          description: Invalid request data
  /products:
    get:
      summary: Get products
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: lastId
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - in: query
          name: order
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '500':
          description: Internal server error
    post:
      summary: Create a product (ADMIN role required)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
                description:
                  type: string
      responses:
        '201':
          description: Product created successfully
        '500':
          description: Internal server error
  /products/{id}:
    get:
      summary: Get product by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '404':
          description: Product not found
    put:
      summary: Update product (ADMIN role required)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
                description:
                  type: string
      responses:
        '200':
          description: Product updated successfully
        '404':
          description: Product not found
        '500':
          description: Internal server error
    delete:
      summary: Delete product (ADMIN role required)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Product deleted successfully
        '404':
          description: Product not found
        '500':
          description: Internal server error
